<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	mc:Ignorable="d">

	<!-- Fonts -->
	<FontFamily
		x:Key="HeaderFontFamily">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
	<sys:Double
		x:Key="HeaderFontSize">21.333</sys:Double>
	<sys:Double
		x:Key="HyperlinkFontSize">11</sys:Double>

	<!-- Colors -->
	<Color
		x:Key="NavigationBorderColor">#FF9D9492</Color>

	<!-- Brushes -->
	<SolidColorBrush
		x:Key="NavigationBorderBrush"
		Color="{StaticResource NavigationBorderColor}" />
	<SolidColorBrush
		x:Key="HoverHyperlinkForegroundBrush"
		Color="#FF000000" />
	<SolidColorBrush
		x:Key="HoverHyperlinkBackgroundBrush"
		Color="White" />
	<SolidColorBrush
		x:Key="GrayBrush"
		Color="#FFB9B9B9"
		PresentationOptions:Freeze="True" />

	<!-- Global Styles -->
	<ControlTemplate
		x:Key="ChromeButtonControlTemplate"
		TargetType="{x:Type ButtonBase}">
		<Border
			x:Name="Chrome"
			BorderBrush="{TemplateBinding BorderBrush}"
			Margin="0"
			Background="{TemplateBinding Background}"
			SnapsToDevicePixels="True">
			<ContentPresenter
				x:Name="contentPresenter"
				ContentTemplate="{TemplateBinding ContentTemplate}"
				Content="{TemplateBinding Content}"
				ContentStringFormat="{TemplateBinding ContentStringFormat}"
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				Margin="{TemplateBinding Padding}"
				RecognizesAccessKey="True"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Property="Foreground"
					Value="#FFADADAD" />
				<Setter
					Property="Opacity"
					TargetName="Chrome"
					Value="0.5" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	
	
	<Style
		x:Key="ChromeButtonStyle"
		TargetType="{x:Type Button}">
		<Style.Resources>
			<Storyboard
				x:Key="OnMouseDownStoryboard">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame
						KeyTime="0"
						Value="0.5" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="OnMouseUpStoryboard">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame
						KeyTime="0"
						Value="1" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</Style.Resources>
		<Setter
			Property="Background"
			Value="#00000000" />
		<Setter
			Property="BorderBrush"
			Value="{x:Null}" />
		<Setter
			Property="BorderThickness"
			Value="0" />
		<Setter
			Property="Padding"
			Value="0" />
		<Setter
			Property="Cursor"
			Value="Hand" />
		<Setter
			Property="Template"
			Value="{StaticResource ChromeButtonControlTemplate}" />
		<Style.Triggers>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Property="Opacity"
					Value="0.5" />
			</Trigger>
			<EventTrigger
				RoutedEvent="Mouse.PreviewMouseDown">
				<BeginStoryboard
					x:Name="OnMouseDown_BeginStoryboard"
					Storyboard="{StaticResource OnMouseDownStoryboard}" />
			</EventTrigger>
			<EventTrigger
				RoutedEvent="Mouse.PreviewMouseUp">
				<BeginStoryboard
					x:Name="OnMouseUp_BeginStoryboard"
					Storyboard="{StaticResource OnMouseUpStoryboard}" />
			</EventTrigger>
		</Style.Triggers>
	</Style>
	<Style
		x:Key="LinksStackPanelStyle"
		TargetType="StackPanel">
		<Setter
			Property="VerticalAlignment"
			Value="Bottom" />
		<Setter
			Property="HorizontalAlignment"
			Value="Left" />
		<Setter
			Property="Orientation"
			Value="Horizontal" />
		<Setter
			Property="Margin"
			Value="10,0,0,0" />
	</Style>
	<Style
		x:Key="ActionButtonStyle"
		TargetType="Button">
		<Style.Resources>
			<Storyboard
				x:Key="OnMouseDownStoryboard">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame
						KeyTime="0"
						Value="0.5" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard
				x:Key="OnMouseUpStoryboard">
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetProperty="(UIElement.Opacity)"
					Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame
						KeyTime="0"
						Value="1" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</Style.Resources>
		<Style.Triggers>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Property="Opacity"
					Value="0.5" />
			</Trigger>
			<EventTrigger
				RoutedEvent="Mouse.PreviewMouseDown">
				<BeginStoryboard
					x:Name="OnMouseDown_BeginStoryboard"
					Storyboard="{StaticResource OnMouseDownStoryboard}" />
			</EventTrigger>
			<EventTrigger
				RoutedEvent="Mouse.PreviewMouseUp">
				<BeginStoryboard
					x:Name="OnMouseUp_BeginStoryboard"
					Storyboard="{StaticResource OnMouseUpStoryboard}" />
			</EventTrigger>
		</Style.Triggers>
		<Setter Property="Background" Value="Black"/>
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter
			Property="Template"
			Value="{StaticResource ChromeButtonControlTemplate}" />
	</Style>
	<Style
		x:Key="LinkStyle"
		TargetType="Button">
		<Setter
			Property="Foreground"
			Value="{StaticResource GrayBrush}" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource NavigationBorderBrush}" />
		<Setter
			Property="FontFamily"
			Value="{StaticResource HeaderFontFamily}" />
		<Setter
			Property="FontSize"
			Value="{StaticResource HyperlinkFontSize}" />
		<Setter
			Property="Cursor"
			Value="Hand" />
		<Setter
			Property="Width"
			Value="auto" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Center" />
		<Setter
			Property="Padding"
			Value="5,2,5,2" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="Button">
					<Grid
						x:Name="ButtonGrid"
						Cursor="{TemplateBinding Cursor}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="CommonStates">
								<VisualState
									x:Name="Normal" />
								<VisualState
									x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Duration="00:00:00.0010000"
											Storyboard.TargetName="ContentPresenter"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame
												KeyTime="00:00:00"
												Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Pressed">
								</VisualState>
								<VisualState
									x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Duration="00:00:00.0010000"
											Storyboard.TargetName="ContentPresenter"
											Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
											<DiscreteObjectKeyFrame
												KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Center</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Duration="00:00:00.0010000"
											Storyboard.TargetName="ContentPresenter"
											Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
											<DiscreteObjectKeyFrame
												KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Center</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Duration="00:00:00.0010000"
											Storyboard.TargetName="DisabledOverlay"
											Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
											<DiscreteObjectKeyFrame
												KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Center</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Duration="00:00:00.0010000"
											Storyboard.TargetName="DisabledOverlay"
											Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
											<DiscreteObjectKeyFrame
												KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Center</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Duration="00:00:00.0010000"
											Storyboard.TargetName="ContentPresenter"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame
												KeyTime="00:00:00"
												Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											BeginTime="00:00:00"
											Duration="00:00:00.0010000"
											Storyboard.TargetName="DisabledOverlay"
											Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame
												KeyTime="00:00:00"
												Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="FocusStates">
								<VisualState
									x:Name="Focused">
									<Storyboard>
									</Storyboard>
								</VisualState>
								<VisualState
									x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border
							x:Name="ContentBorder"
							MinWidth="{TemplateBinding MinWidth}"
							MinHeight="{TemplateBinding MinHeight}"
							Opacity="1"
							Padding="0">
							<ContentPresenter
								x:Name="ContentPresenter"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}" />
						</Border>
						<Border
							x:Name="InteractiveBorder"
							MinWidth="{TemplateBinding MinWidth}"
							MinHeight="{TemplateBinding MinHeight}"
							Background="{StaticResource HoverHyperlinkBackgroundBrush}"
							BorderThickness="1,1,1,1"
							Opacity="0"
							BorderBrush="{StaticResource HoverHyperlinkBackgroundBrush}"
							CornerRadius="0" />
						<Border
							x:Name="InteractiveElementBorder"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Visibility="Visible"
							Opacity="0.2">
							<TextBlock
								x:Name="InteractiveElement"
								Foreground="{StaticResource HoverHyperlinkForegroundBrush}"
								FontSize="{TemplateBinding FontSize}"
								FontWeight="{TemplateBinding FontWeight}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								Text="{TemplateBinding Content}" />
						</Border>
						<TextBlock
							x:Name="DisabledOverlay"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							Text="{TemplateBinding Content}"
							Foreground="Black"
							Visibility="Collapsed"
							FontWeight="Bold" />
					</Grid>
					<ControlTemplate.Triggers>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>